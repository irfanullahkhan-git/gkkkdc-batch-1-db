Microsoft Windows [Version 10.0.22631.4890]
(c) Microsoft Corporation. All rights reserved.

C:\Windows\System32>mysql -u root -p
Enter password: *****
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MySQL [(none)]> CREATE DATABASE ExampleDB;
Query OK, 1 row affected (0.01 sec)

MySQL [(none)]> USE ExampleDB;
Database changed
MySQL [ExampleDB]> CREATE TABLE Employees (
    ->  EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
    ->  FirstName VARCHAR(50),
    ->  LastName VARCHAR(50),
    ->  Department VARCHAR(50),
    ->  Salary DECIMAL(10, 2),
    ->  HireDate DATE
    -> );
Query OK, 0 rows affected (0.02 sec)

MySQL [ExampleDB]> INSERT INTO Employees (FirstName, LastName, Department, Salary, HireDate) VALUES
    -> ('John', 'Doe', 'HR', 50000.00, '2020-01-15'),
    -> ('Jane', 'Smith', 'IT', 60000.00, '2019-03-22'),
    -> ('Alice', 'Johnson', 'Finance', 55000.00, '2021-07-30'),
    -> ('Bob', 'Brown', 'IT', 65000.00, '2018-11-05'),
    -> ('Charlie', 'Davis', 'HR', 52000.00, '2022-02-10'),
    -> ('Eva', 'Wilson', 'Finance', 58000.00, '2020-09-12');
Query OK, 6 rows affected (0.02 sec)
Records: 6  Duplicates: 0  Warnings: 0

MySQL [ExampleDB]> SELECT * FROM Employees;
+------------+-----------+----------+------------+----------+------------+
| EmployeeID | FirstName | LastName | Department | Salary   | HireDate   |
+------------+-----------+----------+------------+----------+------------+
|          1 | John      | Doe      | HR         | 50000.00 | 2020-01-15 |
|          2 | Jane      | Smith    | IT         | 60000.00 | 2019-03-22 |
|          3 | Alice     | Johnson  | Finance    | 55000.00 | 2021-07-30 |
|          4 | Bob       | Brown    | IT         | 65000.00 | 2018-11-05 |
|          5 | Charlie   | Davis    | HR         | 52000.00 | 2022-02-10 |
|          6 | Eva       | Wilson   | Finance    | 58000.00 | 2020-09-12 |
+------------+-----------+----------+------------+----------+------------+
6 rows in set (0.01 sec)

MySQL [ExampleDB]> SELECT SUM(Salary) FROM Employees;
+-------------+
| SUM(Salary) |
+-------------+
|   340000.00 |
+-------------+
1 row in set (0.01 sec)

MySQL [ExampleDB]> SELECT Department, SUM(Salary) FROM Employees GROUP BY Department;
+------------+-------------+
| Department | SUM(Salary) |
+------------+-------------+
| HR         |   102000.00 |
| IT         |   125000.00 |
| Finance    |   113000.00 |
+------------+-------------+
3 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT Department, AVG(Salary) FROM Employees GROUP BY Department;
+------------+--------------+
| Department | AVG(Salary)  |
+------------+--------------+
| HR         | 51000.000000 |
| IT         | 62500.000000 |
| Finance    | 56500.000000 |
+------------+--------------+
3 rows in set (0.01 sec)

MySQL [ExampleDB]> SELECT Department, COUNT(*) FROM Employees GROUP BY Department;
+------------+----------+
| Department | COUNT(*) |
+------------+----------+
| HR         |        2 |
| IT         |        2 |
| Finance    |        2 |
+------------+----------+
3 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT Department, MAX(Salary) FROM Employees GROUP BY Department;
+------------+-------------+
| Department | MAX(Salary) |
+------------+-------------+
| HR         |    52000.00 |
| IT         |    65000.00 |
| Finance    |    58000.00 |
+------------+-------------+
3 rows in set (0.01 sec)

MySQL [ExampleDB]> SELECT Department, MIN(Salary) FROM Employees GROUP BY Department;
+------------+-------------+
| Department | MIN(Salary) |
+------------+-------------+
| HR         |    50000.00 |
| IT         |    60000.00 |
| Finance    |    55000.00 |
+------------+-------------+
3 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT COUNT(*) AS TotalEmployees FROM Employees GROUP BY HireDate;
+----------------+
| TotalEmployees |
+----------------+
|              1 |
|              1 |
|              1 |
|              1 |
|              1 |
|              1 |
+----------------+
6 rows in set (0.01 sec)

MySQL [ExampleDB]> SELECT HireDate, COUNT(*) AS TotalEmployees FROM Employees GROUP BY HireDate;
+------------+----------------+
| HireDate   | TotalEmployees |
+------------+----------------+
| 2020-01-15 |              1 |
| 2019-03-22 |              1 |
| 2021-07-30 |              1 |
| 2018-11-05 |              1 |
| 2022-02-10 |              1 |
| 2020-09-12 |              1 |
+------------+----------------+
6 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT YEAR(HireDate), COUNT(*) AS TotalEmployees FROM Employees GROUP BY YEAR(HireDate);
+----------------+----------------+
| YEAR(HireDate) | TotalEmployees |
+----------------+----------------+
|           2020 |              2 |
|           2019 |              1 |
|           2021 |              1 |
|           2018 |              1 |
|           2022 |              1 |
+----------------+----------------+
5 rows in set (0.01 sec)

MySQL [ExampleDB]> SELECT Department, SUM(Salary) FROM Employees GROUP BY Department;
+------------+-------------+
| Department | SUM(Salary) |
+------------+-------------+
| HR         |   102000.00 |
| IT         |   125000.00 |
| Finance    |   113000.00 |
+------------+-------------+
3 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT Department, SUM(Salary) FROM Employees GROUP BY Department ORDER BY SUM(Salary) DESC;
+------------+-------------+
| Department | SUM(Salary) |
+------------+-------------+
| IT         |   125000.00 |
| Finance    |   113000.00 |
| HR         |   102000.00 |
+------------+-------------+
3 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT Department, SUM(Salary) FROM Employees GROUP BY Department ORDER BY SUM(Salary) DESC LIMIT 1;
+------------+-------------+
| Department | SUM(Salary) |
+------------+-------------+
| IT         |   125000.00 |
+------------+-------------+
1 row in set (0.00 sec)

MySQL [ExampleDB]> SELECT AVG(Salary) FROM Employees WHERE YEAR(HireDate) = "2020";
+--------------+
| AVG(Salary)  |
+--------------+
| 54000.000000 |
+--------------+
1 row in set (0.01 sec)

MySQL [ExampleDB]> SELECT COUNT(*) FROM Employees WHERE Department = "IT";
+----------+
| COUNT(*) |
+----------+
|        2 |
+----------+
1 row in set (0.00 sec)

MySQL [ExampleDB]> SELECT MAX(Salary) FROM Employees WHERE Department = "HR";
+-------------+
| MAX(Salary) |
+-------------+
|    52000.00 |
+-------------+
1 row in set (0.00 sec)

MySQL [ExampleDB]> SELECT YEAR(HireDate), COUNT(*) AS TotalEmployees FROM Employees GROUP BY YEAR(HireDate);
+----------------+----------------+
| YEAR(HireDate) | TotalEmployees |
+----------------+----------------+
|           2020 |              2 |
|           2019 |              1 |
|           2021 |              1 |
|           2018 |              1 |
|           2022 |              1 |
+----------------+----------------+
5 rows in set (0.00 sec)

MySQL [ExampleDB]> SELECT YEAR(HireDate), COUNT(*) AS TotalEmployees FROM Employees GROUP BY YEAR(HireDate) ORDER BY 2 LIMIT 1;
+----------------+----------------+
| YEAR(HireDate) | TotalEmployees |
+----------------+----------------+
|           2022 |              1 |
+----------------+----------------+
1 row in set (0.00 sec)

MySQL [ExampleDB]> SELECT YEAR(HireDate), COUNT(*) AS TotalEmployees FROM Employees GROUP BY YEAR(HireDate) ORDER BY 2 DESC LIMIT 1;
+----------------+----------------+
| YEAR(HireDate) | TotalEmployees |
+----------------+----------------+
|           2020 |              2 |
+----------------+----------------+
1 row in set (0.00 sec)

MySQL [ExampleDB]>